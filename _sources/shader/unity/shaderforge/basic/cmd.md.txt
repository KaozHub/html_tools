#【Unity】ShaderForgeのノードの説明を訳してまとめた(Main以外のノード編)on
f:id:ponkotsu0:20151015105150p:plain

Mainノード編からの続きです。

ponkotsu-box.hatenablog.com

Main以外のすべてのノードの公式説明の訳になります。

基本的にはGoogle翻訳ですが、明らかにおかしかったり、自分なりにわかりにくい訳は直しています。

## Add

和を出力[A] + [B]

Subtract

差を出力[A] - [B]

Multiply

積を出力[A] * [B]

Divide

商を出力[A] / [B]

Reciprocal

商を出力　式⇒1 / input

Power

乗算結果を出力　[Val]の[Exp]乗

Sqrt

その入力の平方根を出力します

Log

その入力の対数を出力します。あなたは、ドロップダウンメニューでログベースを切り替えることができます

Min

[A]と[B]の最小値を出力します

Max

[A]と[B]の最大値を出力します

Abs

その入力の絶対値を出力します。基本的に、それは負の値が正になります

Sign

その入力の符号を出力します。
値が0より大きい出力1
00を出力に等しい値
0未満の出力値-1

Ceil

その入力は、最も近い整数に切り上げ出力します

Round

最も近い整数にその入力を丸めて出力[

Floor

その入力は、最も近い整数に切り捨て出力します

Trunc

ゼロに向かって最も近い整数に丸め、その入力を出力します。基本的に、それは整数を残して、小数点以下を削除

Step(A <= B)

出力1[A][B]以下であれば、そうでなければ0を出力します

Smoothstep

3番目の値が平滑化された出力値とクランプ逆lerpと考えて0と1の間の値を出力し、その範囲内にある場合に基づくスムーズ間の2つの値を、ブレンドします。

If

[A]が[B]よりも大きい場合に[A> B]の入力を出力します
[A]が[B]に等しい場合[A= B]の入力を出力します
出力[A<B]の入力を[A]が未満である[B]

Frac

その入力の小数部分を出力します。基本的に、それは、整数部分を削除し、のみ小数部分を保持します。 4.32あろう出力0.32の入力。このノードは、あなたの時間をかけてのこぎり波を与える時間ノードと組み合わせにおいて特に有用です

Fmod

残りの部分を出力します[A]で割った[B]

Clamp

残りの部分を出力します[A]で割った[B]

 

Clamp(Simple)

最小値と最大値の代わりに、ノードコネクタに対して同じクランプとしてではなく、2と数値の入力

Clamp 0-1

その入力0を下回らない値であり、せいぜい1を出力します

Lerp

Lerpは、2つの値または色をブレンドするために使用されます。
[T]が0の場合は、[A]を出力
[T]が0.5であれば、[A]と[B]のブレンドした中間を出力
[T]が1である場合、[B]を出力
[T]がそれ以外の値の場合は、ふたつの入力の近似値を出力

Lerp(Simple)

Lerpと同じだが、ノードの代わりにAとBに入力した数値を使う

InverseLerp

InverseLerpは通常の範囲を再マッピングするために使用されます。
[T]は[A]に等しい場合、0を出力
[T]は[A]と[B]の中間地の場合、0.5を出力
[T]が[B]に等しい場合には、1を出力
[T]がそれ以外の値の場合は、ふたつの入力の近似値を出力

Posterize

[ステップ]を介してくる値に基づいて、丸め値。 5の[ステップ]の値は、0から1の範囲で5バンドが作成されます

Blend

指定したメソッドを使用しての上にBをブレンド

※公式の画像を参考にしたほうがわかりやすいです

Remap

1つの範囲から別の値をマッピングし直します。再マップ（シンプル）が、代わりに数値定数の入力と同じ

Remap(Simple)

1つの範囲から別の値をマッピングし直します。ノードは-1から1までの値を想定していますが、例えば、もしあなたが出力に2〜5の値をしたい場合、あなたは二行目の1行目、2と5に1を入力-1とすることができます

Noise

二成分の入力に基づいて、擬似乱数を生成（UV座標など）

OneMinus

出力1のマイナスの入力。カラー入力で使用する場合は、色が反転します

Negate

-1を掛けた主な入力を出力します。基本的には負を正の値、正を負の値へ

Exp

Expを選択時：inputの乗算をeに出力
Exp2を選択時：input2の乗算を2に出力

Hue

RGBカラーを色調に与える

HSV to RGB

HSV（色相、彩度、値）の入力指定されたRGBカラーを出力します。色相と彩度は0と1との間の値があまりにもありますが、色を露出オーバーには、1を超えて行くことができます

RGB to HSV

出力HSV（色相、彩度、値）のコンポーネントは、カラー入力を与えられました。色相と彩度値が露出オーバーの色の1を超えて行くことができます0と1の間です

Value

数値は、また、「ベクター1」と呼ぶことができます。プロパティバージョンも入手可能です。値は、複数の構成要素を有するベクターを作成するための追加のノードで使用することができます。値は、ベクトル/色で乗算することができます。例えば、0.5の値を乗じたベクトル（3,1,0）は、ベクトルを出力する（1.5,0.5,0）

Vector2

二つの成分/値を持つベクトルです。通常、UV座標で使用されます。紫外線へのベクトル2を追加すると、UVを翻訳します座標。乗算紫外線UVをスケールされるベクトル2との調整

Vector3

3コンポーネント/値を持つベクトルです。通常、色、位置や方向として使用

Vector4

4コンポーネント/値を持つベクトルです。通常、アルファチャネルを持つ色として使用、または第4のチャネル内のいくつかの余分なデータと位置として。利用可能なインスペクタに公開するための2つのパラメータがあります。色とベクトル4パラメータ

Texture2D

テクスチャへの参照が含まれていますし、（接続されている場合）は、特定のUVでテクスチャが特定のMIPレベルとの調整サンプリングします。 【テックス]入力はテクスチャアセットノードによって接続されている場合、これはもはやインスペクタのパラメータになることはありません。出力[RGB]と同様に独立したチャンネル

TextureAsset

テクスチャへの参照が含まれます。これは、単一のテクスチャを複数回サンプリングするために使用されている - だけテクスチャ2Dノードの[テックス]入力に接続することができます。ユーザーが唯一の1つのテクスチャを割り当てる必要があるので、これはまた、材料のインスペクタに反映されます

 Value(Property)

マテリアルのinspecterに表示されるValue

Vector4(Property)

マテリアルのinspecterに表示されるVector4

Color

ベクトル4と同じですが、カラーピッカーで材料インスペクタにさらさ4コンポーネント/値を持つベクトル

Cubemap

キューブマップへの参照が含まれていますし、（接続している場合）、特定のMIPレベルで特定の方向にそれをサンプリングします。出力[RGB]と同様に独立したチャンネル

Slider

あなたは簡単に最小値と最大値の間の値を微調整することができます。

Switch

チェックボックスに基づいて、2つの入力間を切り替えます。それは両方のブランチを処理する、これはシェーダを最適化するために使用することはできませんが、一つだけを表示

Toggle

チェックボックスに基づいて、0または1のいずれかの値

DotProduct

[A]と[B]のドット積を出力する。基本的に、 2の正規化ベクトルについて、それは彼らが互いに離れるポイントどこまで出力します。それらが同じ方向を指している場合、それは、1を出力し、それらが互いに直交している場合、それは反対方向を指している場合、それは、-1を出力し、0を出力します。
ドロップダウンの選択：
スタンダード - 通常の内積
正 - すべての負の値にします0
マイナス - すべての正の値にします0
ABS - すべての負の値が正作ります
正規化 - 1の範囲0で出力の代わりに、-1〜1

下のグラフは、2つの正規化されたベクターを使用する際に異なるモードがどのように動作するかを示しています。
X上にはY軸上には出力値が、それらの間の角度を有する軸：

CrossProduct

[A]と[B]のクロス積を出力。基本的に、それは両方の入力ベクトルに垂直なベクトルを出力

Reflect

出力は反映かのように入ってくるベクトル[I]の反射ベクトルは、正常/[N]で表面にバウンス

Normalize

入力ベクトルの正規化されたバージョンを出力します。基本的に、同じ方向を維持したまま、1ベクトルの長さを設定します

Append

複数の入力値/ベクトルから単一のベクトルを出力します。例えば、[A]ベクター2、および[B]である場合には値（ベクター1）は、ノードを出力[B]がであるとき、[A]、赤と緑のチャネルである3ベクター、青チャンネル

ComponentMask

これははベクトルのチャネルの順序を変更または抽出するために使用することができます

Desaturate

入力[コル]の彩度バージョンを出力します。 [デス]は、それがどのように彩度を決定します。 1の値が0の場合は不飽和化を意味し、0.5は半分の彩度を意味し、完全に彩度を意味します

ChannelBlend

対応する色の入力を掛けたマスクの各構成要素の合計を出力します。 triplanarブレンドするのに便利です

NormalBlend

通常のベースは通常の詳細によって乱される2法線方向を、組み合わせ

Distance

ふたつの入力ポイント[A]と[B]の間の距離を出力

Length

その入力ベクトルの長さ/大きさを出力します。

Transform

1スペースから別のベクトルを変換します。あなたは世界/ローカル/接線/ビューを切り替えることができます。内蔵のベクトルはワールド空間にあります。通常の入力への方向は接線空間です。

VectorPrijection

出力ベクトル[A]はベクトル[B]に投影

VectorRejection

出力ベクトル[A]から、ベクトル[B]を排除

DDX

X軸に沿ってスクリーン空間における入力ベクトルの偏導関数（変化率）を出力します

DDY

Y軸に沿ってスクリーン空間における入力ベクトルの偏導関数（変化率）を出力します

DDXY

XおよびY軸に沿ってスクリーン空間における入力ベクトルの二つの部分導関数の絶対値和（変化率）を出力します。コード内fwidth（）として知られています。

Panner

出力入力[UV]座標、パンニング/によって相殺[ディスト]距離、UとVのパラメータで指定した方向/速度

Rotator

入力[UV]はピボットポイント[PIV]周り[アン]ラジアンだけ回転座標出力します。 [アン]が接続され、またはタイム・ノードに接続されていない場合、[Spdの】回転速度を制御します

Pallax

出力入力[UV] [発]の深さと基準高さ[参照]で、[ヘイ]入力由来視差オフセットを調整します。
0の[参照]の高さは、ハイトマップは、メッシュから突き出ているかのように視差を意味します
1の[参照]の高さは、ハイトマップがメッシュにダウンした場合のように視差を意味します

UV Tiles

UVタイルは、UV座標の形で、タイルマップ内のタイルを取得するために使用することができます。
[UV]は内部のタイルを取得するには、ベースのUVです
【WID]はタイルマップの幅に沿ったタイルの量は、
[ヘイ]はタイルマップの高さに沿ったタイルの量であります
[タイル]を押して、抽出したいタイルマップタイルのインデックスです。 0が左下から開始し、最初のタイルの整数、としてこれを指定します。

UV Coordinates

指定されたジオメトリのUV coodinateを出力します。ドロップダウンを使用すると、UVチャンネル0またはUVチャネルのいずれかにメッシュは彼らのライトマップUVのためUV1を使用するライトマップ1.ノートを選択することができます

ObjectPosition

オブジェクトのピボットポイントのワールド位置を出力します

ObjectScale

オブジェクトのスケールを出力します。逆数をチェックすると、計算上安価ですが、あなたの逆スケール（1/スケール）を与えます。メッシュがバッチ処理されている場合、これは動作しませんので注意してください。

ScreenPosition

UVは、スクリーン空間へのマッピングのための座標として、メッシュの現在の部分の画面位置を出力し、使用することができます。ドロップダウンボックスでは、「正規化」とは、画面の中央に、{0,0}を置くと、右上にある{1,1}。 「タイル」は中央に{0,0}を維持しますが、あなたの縦横比に基づいて、X軸上にスケールします

WorldPosition

ワールド空間でのメッシュの現在の部分の位置を出力します

VertexColor

頂点カラーを出力します。あなたが頂点カラーに焼きアンビエントオクルージョンをした、または塗装色でメッシュの着色、または何か他のもののための頂点カラーを使用する場合、これはあなたがしたいノードがあります

Fresnel

表面法線とビュー方向との内積を出力します。カスタムノーマルを使用したい場合は[NRMが]に使用されます。デフォルトでは、通常の摂動を用いています。 [経験]は、出力の指数を変更します。より高い値はフレネルが薄くなります

NormalDirection

ワールド空間で通常のメッシュの方向を出力します。摂動のチェックボックスがメインノードの「標準」の入力を適用した後にそれが正常なマップとして法線を使うようになります。

BitangentDirection

ワールド空間で、メッシュbitangentの方向を出力します

TangentDirection

ワールド空間で、メッシュ接線方向を出力します

ViewDirection

ワールド空間で、カメラへのジオメトリの現在の部分からの方向を出力します

ViewReflection

通常の表面に応じてバウンスかのようにビューの方向を出力します。これは完璧な反射をキューブマップの入力として使用することができます

FaceSign

これは、現在の顔がfrontfaceまたは裏面あるかどうかを検出するために使用されます。出力ドロップダウンボックスで指定した内容に応じbackfaces、ためfrontfacesの1、およびいずれかの-1または0。

LightColor

現在のライトの色を出力します

LightAttenuation

光の減衰を出力します。このノードは、1つの光の減衰と影の両方が含まれています

AmbientLight

シェーダがでレンダリングされているシーンの環境光を出力

LightDirection

現在の光がレンダリングされることに方向を出力します

HalfDirection

ハーフ方向を出力します。これは、ビューおよび一般ブリン・フォン鏡面モデルで使用される光ベクトル、の中間に向ける方向であります

LightPosition

出力は、現在の光の位置がレンダリングされています。
[PNT]レンダリングされている現在の光は点光源は、それ以外の場合は0を出力し、出力1である場合

Time

異なる速度で出力時間。
[T/20]は20倍遅いの実行時間を出力
[t]は、現在の時刻を出力
[tは*2]を2回の速走行時間を出力
[tは*3]の速三回実行時間を出力

ViewPosition

ビュー/カメラの現在位置を出力する（視点のカメラを使用している場合、ビューの位置が「背後にある」画面であることに注意してください）

ProjectionParameters

出力4投影パラメータ。
[サインイン]-1現在裏返し投影行列をレンダリングする場合、それ以外の場合は1です
[近く]現在のカメラの近くに平面距離があります
[ファー]現在のカメラの遠平面距離があります
[1/ファー]は遠い面の往復距離であります

ScreenParameters

出力4画面パラメーター。
【PXW]ピクセルの画面の幅があります
【PXH]ピクセルの画面の高さがあります
[1+1/ W]1プラスピクセル幅の逆数
[1+1/ H]1プラスピクセルの高さの逆数

FogColor

Fogの色を出力します

SceneColor

このオブジェクトがレンダリングされる前のシーンのレンダリング含むテクスチャ。デフォルトでは、そのUVは、各画素がオブジェクトの背後にある色を表現すること、画面空間です。これは、より高度なブレンド/透明効果、またはUVが変更される場合、とりわけ、屈折を作る手動方法を使用することができます

SceneDepth

現在のピクセルの背後にあるシーンにカメラからの深さ。注：ブレンド設定でデプスバッファの書き込みをオフにする必要があり、あなたは、深さのテクスチャをレンダリングするカメラを使用する必要があります

DepthBlend

これは、この画素が距離入力に基づいて、背景ジオメトリにどれだけ近いかに依存して、0と1の間の値を出力します。水のエッジをフェードアウト、またはジオメトリと交差lightshaftsを軟化するのに便利です。注：ブレンド設定でデプスバッファの書き込みをオフにする必要があり、あなたは、深さのテクスチャをレンダリングするカメラを使用する必要があります

Depth

これは、オブジェクト自体にカメラの近くに平面からの距離であります

Pi

その直径に円周率の値が、円の円周の比率を出力します（約3.141593）

Tau

その半径にタウの値、円の円周の比率を出力します（約6.283185）

Phi(Golden ratio)

ピピの値、黄金比（約1.618034）を出力します

Root2

2（約1.414214）の平方根を出力します

e(Euler's Constant)

出力オイラーの定数e（約2.718282）

sin

その入力のサインを出力します

Cos

その入力のコサインを出力します

Tan

その入力のタンジェントを出力します

ArcSin

ラジアンで、その入力のアークサインを出力します

ArcCos

ラジアンで、その入力のアークコサインを出力します

ArcTan

ラジアンで、その入力のアークタンジェントを出力します

ArcTan2

2つの入力座標の逆正接を出力します。範囲と単位は、ドロップダウンボックスに依存します。デフォルトでは-piからπに、ラジアンでです。

Matrix　4x4

定数行列。初期値は、単位行列のことをしています

Matrix　4x4 Property

matrixプロパティ。あなたはmyMaterial.SetMatrixを使用してC＃の端にそれに割り当てることができます

MultuplyMatrix

行列乗算ノード。ベクターは、スペース、または他のマトリックスを変換するために使用することができます。あなたがmyMaterial.SetMatrixを使用してC＃の端にそれに割り当てることができます（）。その行列の乗算注可換ではありません。それは、* BがB* Aと同じものではありません、と言うことです

Transpose

行列の転置を出力

Code

シェーダの内側にカスタムコードを実行するためのノード。左の例では、ノードは、lerpに似て動作することを[mid]に向かってカーブ到達する前に、[end]

Relay

ノード接続を編成するための入力、便利を出力